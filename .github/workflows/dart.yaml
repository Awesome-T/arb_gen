# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart
# on:
#   push:
#     # Sequence of patterns matched against refs/heads
#     branches: 
#       - "dev"
#     # Sequence of patterns matched against refs/tags
#     # tags:        
#     #   - v2
#     #   - v1.*
#   pull_request:
#     branches: 
#       - "dev"
#   label:
#     types: 
#       - created
#       - edited
on: [pull_request]
jobs:
  test_linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        # Run everything from within the arb_gen project directory
        working-directory: ./arb_gen
    
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "master"

      # Download all the packages that the app uses
      - run: flutter pub get
      # TODO: run static analysis here when we get to zero analysis warnings

      # Run all tests
      - run: flutter test



      # # Note: This workflow uses the latest stable version of the Dart SDK.
      # # You can specify other versions if desired, see documentation here:
      # # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # # - uses: dart-lang/setup-dart@v1
      # - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      # - name: Install dependencies
      #   run: dart pub get

      # # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .
        
      # # Consider passing '--fatal-infos' for slightly stricter analysis.
      # - name: Analyze project source
      #   run: dart analyze

      # # Your project will need to have tests in test/ and a dependency on
      # # package:test for this step to succeed. Note that Flutter projects will
      # # want to change this to 'flutter test'.
      # - name: Run tests
      #   run: dart test
        
      #  tests run, this will upload your coverage report to Codecov:
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}